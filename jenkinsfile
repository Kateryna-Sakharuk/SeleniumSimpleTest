pipeline {
    agent any
    parameters {
        choice choices: ['google-failed-test-suite.xml', 'google-test-suite.xml'], name: 'Suite'
        choice choices: ['remote', 'local'], name: 'TestEnv'
    }

    environment {
        WEBDRIVER_CHROME_DRIVER = 'C:/driver/chromedriver.exe'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'develop_new_website', url: 'https://github.com/Kateryna-Sakharuk/SeleniumSimpleTest'
            }
        }
        stage('Run Tests') {
            steps {
                   script {
                echo "Selected Suite: ${params.Suite}"
                echo "Selected Test Environment: ${params.TestEnv}"

                bat """
                 mvn clean test ^
                -Dsuite=src/test/resources/suits/google/${params.Suite} ^
                -DbrowserName=chrome ^
                -DtestEnv=${params.TestEnv} ^
                -Dwebdriver.chrome.driver=%WEBDRIVER_CHROME_DRIVER%
                """
                }
            }
        }

        stage('Copy Allure History') {
            steps {
                bat """
                if exist "allure-report\\history" (
                    xcopy /E /I /Y "allure-report\\history" "target\\allure-results\\history"
                )
                """
            }
        }
    }
    post {
        always {
            allure([
                includeProperties: false,
                jdk: '',
                results: [[path: 'target/allure-results']]
            ])
        }
    }
}
